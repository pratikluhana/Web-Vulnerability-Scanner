
from PyQt5 import QtCore, QtGui, QtWidgets
from urllib.parse import quote
from urllib.request import urlopen
from urllib.error import HTTPError,URLError

class xss_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(804, 592)
        MainWindow.setStyleSheet("\n"
"background-color:rgb(0, 0, 0);\n"
"")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 0, 181, 161))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap(":/xss/xss (1).jpg"))
        self.label.setObjectName("label")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(160, 0, 641, 161))
        self.textBrowser.setStyleSheet("background-color:qlineargradient(spread:pad, x1:0, y1:0.38, x2:0, y2:0.783, stop:0 rgba(151, 111, 0, 255), stop:1 rgba(209, 209, 0, 255));\n"
"border:none;\n"
"")
        self.textBrowser.setObjectName("textBrowser")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_2.setGeometry(QtCore.QRect(10, 170, 781, 311))
        self.textBrowser_2.setStyleSheet("background-color:rgb(25, 25, 25);\n"
"border:none;\n"
"")
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(210, 520, 61, 31))
        self.label_2.setObjectName("label_2")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(280, 520, 211, 31))
        self.lineEdit.setStyleSheet("background-color:rgb(255, 255, 255);\n"
"border:rgb(0, 0, 0);")
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(510, 510, 51, 51))
        self.pushButton.setStyleSheet("\n"
"\n"
"QPushButton#pushButton{\n"
"background-image:url(:/arrow/129102-simple-red-square-icon-media-a-media22-arrow-forward1.png);\n"
" border-radius: 20px;\n"
"}\n"
"QPushButton#pushButton:pressed{\n"
"background-image:url(:/arrow/125220-matte-white-square-icon);\n"
"}\n"
"")
        self.pushButton.setText("")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.cross_site)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 804, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:28pt; font-weight:600;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:28pt; font-weight:600;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:28pt; font-weight:600;\">Cross Site Scripting(XSS)</span></p></body></html>"))
        self.textBrowser_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt; color:#cacaca;\">Cross-site scripting (XSS) is a type of computer security vulnerability typically found     in web applications. XSS enables attackers to inject client-side scripts into web pages viewed by other users. A cross-site scripting vulnerability may be used by attackers to bypass access controls such as the same-origin policy. Cross-site scripting carried out on websites accounted for roughly 84% of all security vulnerabilities documented by Symantec as of 2007.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:16pt; color:#cacaca;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt; color:#cacaca;\">Bug bounty company HackerOne in 2017 reported that XSS is still a major threat vector.XSS effects vary in range from petty nuisance to significant security risk, depending on the sensitivity of the data handled by the vulnerable site and the nature of any security mitigation implemented by the site\'s owner.Enter URL to check whether it is vulnerable to XSS.</span></p></body></html>"))
        self.label_2.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:16pt; color:#dadada;\">URL :-</span></p></body></html>"))
        self.lineEdit.setPlaceholderText(_translate("MainWindow", "www.abc.com"))

    def cross_site(self):
        
        link=self.lineEdit.text()
        header='http:///[x]'
        headerlist=list(header)
        headerlist.insert(7,link)
        url=''.join(headerlist) #'http://sleepwellproducts.com/products/searchByKeyword/?keyword_search=[x]'
        firstEndIndex = url.find('[')
        start_url = url[:firstEndIndex]

        secondStartIndex = url.find(']')
        end_url = url[secondStartIndex+1:]

        f = open("ref.txt", "r")
        while True:
            xss = f.readline()
            if not xss:
                break
            xssurl = start_url + quote(xss) + end_url
            try:
                res = urlopen(xssurl)
            except HTTPError as e:
                continue
            except URLError as e:
                continue
            else:
                print("\n\nXSS URL = ",xssurl)
        
import temp

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = xss_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

