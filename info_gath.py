# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'info_gath.ui'
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets
import requests

class infogath_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(812, 613)
        MainWindow.setStyleSheet("\n"
"background-color:rgb(0, 0, 0);\n"
"")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(-100, 0, 311, 161))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap(":/info_gath/info_gath.png"))
        self.label.setObjectName("label")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(210, 0, 601, 161))
        self.textBrowser.setStyleSheet("background-color:qlineargradient(spread:pad, x1:0, y1:0.38, x2:0, y2:0.783, stop:0 rgba(151, 111, 0, 255), stop:1 rgba(209, 209, 0, 255));\n"
"border:none;\n"
"")
        self.textBrowser.setObjectName("textBrowser")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_2.setGeometry(QtCore.QRect(10, 190, 791, 261))
        self.textBrowser_2.setStyleSheet("background-color:rgb(25, 25, 25);\n"
"border:none;\n"
"")
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(30, 470, 61, 31))
        self.label_2.setObjectName("label_2")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(100, 470, 211, 31))
        self.lineEdit.setStyleSheet("background-color:rgb(255, 255, 255);\n"
"border:rgb(0, 0, 0);")
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(20, 530, 121, 51))
        self.pushButton.setStyleSheet("\n"
"\n"
"QPushButton#pushButton:hover{\n"
"background-color:qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:0.653591, stop:0 rgba(41, 41, 106, 255), stop:1 rgba(191, 191, 227, 255));\n"
"}\n"
"QPushButton#pushButton:pressed{\n"
"background-color:rgb(109, 109, 163);\n"
"}\n"
"\n"
"\n"
"QPushButton#pushButton{\n"
"display: inline-block;\n"
"  padding: 15px 25px;\n"
"  font-size: 13px;\n"
"  cursor: pointer;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  outline: none;\n"
"  color: #fff;\n"
" background-color:qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:0.568, stop:0 rgba(126, 126, 126, 255), stop:1 rgba(180, 180, 180, 255));\n"
"  border: none;\n"
"  border-radius: 10px;\n"
"  box-shadow: 0 9px #999;\n"
"  display: block;\n"
"}")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.DNS_lookup)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(210, 530, 131, 51))
        self.pushButton_2.setStyleSheet("\n"
"\n"
"QPushButton#pushButton_2:hover{\n"
"background-color:qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:0.653591, stop:0 rgba(41, 41, 106, 255), stop:1 rgba(191, 191, 227, 255));\n"
"}\n"
"QPushButton#pushButton_2:pressed{\n"
"background-color:rgb(109, 109, 163);\n"
"}\n"
"\n"
"\n"
"QPushButton#pushButton_2{\n"
"display: inline-block;\n"
"  padding: 15px 25px;\n"
"  font-size: 13px;\n"
"  cursor: pointer;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  outline: none;\n"
"  color: #fff;\n"
" background-color:qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:0.568, stop:0 rgba(126, 126, 126, 255), stop:1 rgba(180, 180, 180, 255));\n"
"  border: none;\n"
"  border-radius: 10px;\n"
"  box-shadow: 0 9px #999;\n"
"  display: block;\n"
"}")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.whois_lookup)
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(420, 530, 131, 51))
        self.pushButton_3.setStyleSheet("\n"
"\n"
"QPushButton#pushButton_3:hover{\n"
"background-color:qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:0.653591, stop:0 rgba(41, 41, 106, 255), stop:1 rgba(191, 191, 227, 255));\n"
"}\n"
"QPushButton#pushButton_3:pressed{\n"
"background-color:rgb(109, 109, 163);\n"
"}\n"
"\n"
"\n"
"QPushButton#pushButton_3{\n"
"display: inline-block;\n"
"  padding: 15px 25px;\n"
"  font-size: 13px;\n"
"  cursor: pointer;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  outline: none;\n"
"  color: #fff;\n"
" background-color:qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:0.568, stop:0 rgba(126, 126, 126, 255), stop:1 rgba(180, 180, 180, 255));\n"
"  border: none;\n"
"  border-radius: 10px;\n"
"  box-shadow: 0 9px #999;\n"
"  display: block;\n"
"}")
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.geoip_lookup)
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(630, 530, 131, 51))
        self.pushButton_4.setStyleSheet("\n"
"\n"
"QPushButton#pushButton_4:hover{\n"
"background-color:qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:0.653591, stop:0 rgba(41, 41, 106, 255), stop:1 rgba(191, 191, 227, 255));\n"
"}\n"
"QPushButton#pushButton_4:pressed{\n"
"background-color:rgb(109, 109, 163);\n"
"}\n"
"\n"
"\n"
"QPushButton#pushButton_4{\n"
"display: inline-block;\n"
"  padding: 15px 25px;\n"
"  font-size: 13px;\n"
"  cursor: pointer;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  outline: none;\n"
"  color: #fff;\n"
" background-color:qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:0.568, stop:0 rgba(126, 126, 126, 255), stop:1 rgba(180, 180, 180, 255));\n"
"  border: none;\n"
"  border-radius: 10px;\n"
"  box-shadow: 0 9px #999;\n"
"  display: block;\n"
"}")
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_4.clicked.connect(self.http_header)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(450, 470, 231, 31))
        self.lineEdit_2.setStyleSheet("background-color:rgb(255, 255, 255);\n"
"border:rgb(0, 0, 0);")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(400, 470, 41, 31))
        self.label_3.setObjectName("label_3")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 812, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:26pt; font-weight:600;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:26pt; font-weight:600;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:26pt; font-weight:600;\">Informathion Gathering Tool</span></p></body></html>"))
        self.textBrowser_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:90%;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:90%;\"><span style=\" font-family:\'Tw Cen MT\'; font-size:18pt; color:#d4d4d4;\"> </span><span style=\" font-family:\'Tw Cen MT\'; font-size:18pt; font-weight:600; color:#d4d4d4;\">Information gathering</span><span style=\" font-family:\'Tw Cen MT\'; font-size:18pt; color:#d4d4d4;\"> is the most time-consuming and laborious phase of the attack cycle but is often a major determinant of the success or failure of the engagement.</span><span style=\" font-size:18pt; color:#d4d4d4;\"> </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:90%;\"><span style=\" font-family:\'Tw Cen MT\'; font-size:18pt; color:#d4d4d4;\"> There are few tools which are releated for informtion gathering are listed below they are:</span><span style=\" font-size:18pt; color:#d4d4d4;\"> </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:90%;\"><span style=\" font-family:\'Tw Cen MT\'; font-size:18pt; color:#d4d4d4;\">-  DNS Lookup</span><span style=\" font-size:18pt; color:#d4d4d4;\"> </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:90%;\"><span style=\" font-family:\'Tw Cen MT\'; font-size:18pt; color:#d4d4d4;\"> - Whois Lookup</span><span style=\" font-size:18pt; color:#d4d4d4;\"> </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:90%;\"><span style=\" font-family:\'Tw Cen MT\'; font-size:18pt; color:#d4d4d4;\"> - Geo IP Lookup</span><span style=\" font-size:18pt; color:#d4d4d4;\"> </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:90%;\"><span style=\" font-family:\'Tw Cen MT\'; font-size:18pt; color:#d4d4d4;\"> - HTTP Headers</span></p></body></html>"))
        self.label_2.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:16pt; color:#dadada;\">URL :-</span></p></body></html>"))
        self.lineEdit.setPlaceholderText(_translate("MainWindow", "www.abc.com"))
        self.pushButton.setText(_translate("MainWindow", "DNS Lookup"))
        self.pushButton_2.setText(_translate("MainWindow", "Whois Lookup"))
        self.pushButton_3.setText(_translate("MainWindow", "Geo IP Lookup"))
        self.pushButton_4.setText(_translate("MainWindow", "HTTP Headers"))
        self.lineEdit_2.setPlaceholderText(_translate("MainWindow", "For Geo IP Lookup"))
        self.label_3.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:16pt; color:#dadada;\">IP :-</span></p></body></html>"))

    def DNS_lookup(self):
        apiUrl = "http://api.hackertarget.com/dnslookup/?q="
        query = self.lineEdit.text() #input("\nEnter url\n")
        valid = True
        if(valid):
            finalUrl = apiUrl +query
            res = requests.get(finalUrl)
            print(res.text)
        
    def whois_lookup(self):
        apiUrl = "http://api.hackertarget.com/whois/?q="
        query =self.lineEdit.text() # input("\nEnter url\n")
        valid =  True
        if(valid):
            finalUrl = apiUrl +query
            res = requests.get(finalUrl)
            print(res.text)
        
    def geoip_lookup(self):
        apiUrl = "http://api.hackertarget.com/geoip/?q="
        query =self.lineEdit_2.text() # input("\nEnter IP address\n")
        valid = True
        if(valid):
            finalUrl = apiUrl +query
            res = requests.get(finalUrl)
            print(res.text)
        
    def http_header():
        apiUrl = "http://api.hackertarget.com/httpheaders/?q="
        query =self.lineEdit.text() # input("\n Enter url\n")
        valid = True
        if(valid):
            finalUrl = apiUrl +query
            res = requests.get(finalUrl)
            print(res.text)
    
        
import temp

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = infogath_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

