# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'vs_main.ui'
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets
from admin_page import adminpage_MainWindow
from clickjacking import clickjacking_MainWindow
from port_scanner import portscanner_MainWindow
from info_gath import infogath_MainWindow
from xss import xss_MainWindow
from csrf import csrf_MainWindow
from banner_grabbing import bannergrabbing_MainWindow
from dorks import dorks_MainWindow

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1361, 705)
        MainWindow.setStyleSheet("background-color:white;")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(0, 160, 181, 71))
        self.pushButton.setStyleSheet("QPushButton#pushButton:hover{\n"
"background-color:rgb(225, 75, 0);\n"
"}\n"
"QPushButton#pushButton:pressed{\n"
"background-color:rgb(154, 51, 0);\n"
"}\n"
"\n"
"\n"
"QPushButton#pushButton{\n"

"  padding: 15px 25px;\n"
"  font-size: 16px;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  outline: none;\n"
"  color: #fff;\n"
"  background-color: qlineargradient(spread:pad, x1:0, y1:0.147, x2:0.006, y2:0.618636, stop:0.0397727 rgba(109, 109, 109, 255), stop:1 rgba(39, 39, 39, 255));\n"
"  border: none;\n"
"  border-radius: 10px;\n"
"}")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.open_admin_page)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(0, 250, 181, 71))
        self.pushButton_2.setStyleSheet("QPushButton#pushButton_2:hover{\n"
"background-color:rgb(225, 75, 0);\n"
"}\n"
"QPushButton#pushButton_2:pressed{\n"
"background-color:rgb(154, 51, 0);\n"
"}\n"
"\n"
"\n"
"QPushButton#pushButton_2{\n"

"  padding: 15px 25px;\n"
"  font-size: 16px;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  outline: none;\n"
"  color: #fff;\n"
"  background-color: qlineargradient(spread:pad, x1:0, y1:0.147, x2:0.006, y2:0.618636, stop:0.0397727 rgba(109, 109, 109, 255), stop:1 rgba(39, 39, 39, 255));\n"
"  border: none;\n"
"  border-radius: 10px;\n"
"}")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.open_clickjacking_page)
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(0, 340, 181, 71))
        self.pushButton_3.setStyleSheet("QPushButton#pushButton_3:hover{\n"
"background-color:rgb(225, 75, 0);\n"
"}\n"
"QPushButton#pushButton_3:pressed{\n"
"background-color:rgb(154, 51, 0);\n"
"}\n"
"\n"
"\n"
"QPushButton#pushButton_3{\n"
"  padding: 15px 25px;\n"
"  font-size: 16px;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  outline: none;\n"
"  color: #fff;\n"
"  background-color: qlineargradient(spread:pad, x1:0, y1:0.147, x2:0.006, y2:0.618636, stop:0.0397727 rgba(109, 109, 109, 255), stop:1 rgba(39, 39, 39, 255));\n"
"  border: none;\n"
"  border-radius: 10px;\n"
"}")
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.open_portscanner_page)
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(0, 430, 181, 71))
        self.pushButton_4.setStyleSheet("QPushButton#pushButton_4:hover{\n"
"background-color:rgb(225, 75, 0);\n"
"}\n"
"QPushButton#pushButton_4:pressed{\n"
"background-color:rgb(154, 51, 0);\n"
"}\n"
"\n"
"\n"
"QPushButton#pushButton_4{\n"

"  padding: 15px 25px;\n"
"  font-size: 16px;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  outline: none;\n"
"  color: #fff;\n"
"  background-color: qlineargradient(spread:pad, x1:0, y1:0.147, x2:0.006, y2:0.618636, stop:0.0397727 rgba(109, 109, 109, 255), stop:1 rgba(39, 39, 39, 255));\n"
"  border: none;\n"
"  border-radius: 10px;\n"
"}")
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_4.clicked.connect(self.open_infogath_page)
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(0, 520, 181, 71))
        self.pushButton_5.setStyleSheet("QPushButton#pushButton_5:hover{\n"
"background-color:rgb(225, 75, 0);\n"
"}\n"
"QPushButton#pushButton_5:pressed{\n"
"background-color:rgb(154, 51, 0);\n"
"}\n"
"\n"
"\n"
"QPushButton#pushButton_5{\n"

"  padding: 15px 25px;\n"
"  font-size: 16px;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  outline: none;\n"
"  color: #fff;\n"
"  background-color: qlineargradient(spread:pad, x1:0, y1:0.147, x2:0.006, y2:0.618636, stop:0.0397727 rgba(109, 109, 109, 255), stop:1 rgba(39, 39, 39, 255));\n"
"  border: none;\n"
"  border-radius: 10px;\n"
"}")
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_5.clicked.connect(self.open_xss_page)
        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_6.setGeometry(QtCore.QRect(1180, 160, 181, 71))
        self.pushButton_6.setStyleSheet("QPushButton#pushButton_6:hover{\n"
"background-color:rgb(225, 75, 0);\n"
"}\n"
"QPushButton#pushButton_6:pressed{\n"
"background-color:rgb(154, 51, 0);\n"
"}\n"
"\n"
"\n"
"QPushButton#pushButton_6{\n"

"  padding: 15px 25px;\n"
"  font-size: 16px;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  outline: none;\n"
"  color: #fff;\n"
"  background-color: qlineargradient(spread:pad, x1:0, y1:0.147, x2:0.006, y2:0.618636, stop:0.0397727 rgba(109, 109, 109, 255), stop:1 rgba(39, 39, 39, 255));\n"
"  border: none;\n"
"  border-radius: 10px;\n"
"}")
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_6.clicked.connect(self.open_csrf_page)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(6, 10, 131, 121))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap(":/header/vu6 (1).png"))
        self.label.setObjectName("label")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(130, 0, 1241, 121))
        self.textBrowser.setStyleSheet("background-color:qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:0.568, stop:0 rgba(126, 126, 126, 255), stop:1 rgba(180, 180, 180, 255));\n"
"\n"
"border:none;\n"
"")
        self.textBrowser.setObjectName("textBrowser")
        self.pushButton_7 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_7.setGeometry(QtCore.QRect(1180, 250, 181, 71))
        self.pushButton_7.setStyleSheet("QPushButton#pushButton_7:hover{\n"
"background-color:rgb(225, 75, 0);\n"
"}\n"
"QPushButton#pushButton_7:pressed{\n"
"background-color:rgb(154, 51, 0);\n"
"}\n"
"\n"
"\n"
"QPushButton#pushButton_7{\n"

"  padding: 15px 25px;\n"
"  font-size: 16px;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  outline: none;\n"
"  color: #fff;\n"
"  background-color: qlineargradient(spread:pad, x1:0, y1:0.147, x2:0.006, y2:0.618636, stop:0.0397727 rgba(109, 109, 109, 255), stop:1 rgba(39, 39, 39, 255));\n"
"  border: none;\n"
"  border-radius: 10px;\n"
"}")
        self.pushButton_7.setObjectName("pushButton_7")
        self.pushButton_7.clicked.connect(self.open_bannergrabbing_page)
        self.pushButton_8 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_8.setGeometry(QtCore.QRect(1180, 340, 181, 71))
        self.pushButton_8.setStyleSheet("QPushButton#pushButton_8:hover{\n"
"background-color:rgb(225, 75, 0);\n"
"}\n"
"QPushButton#pushButton_8:pressed{\n"
"background-color:rgb(154, 51, 0);\n"
"}\n"
"\n"
"\n"
"QPushButton#pushButton_8{\n"

"  padding: 15px 25px;\n"
"  font-size: 16px;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  outline: none;\n"
"  color: #fff;\n"
"  background-color: qlineargradient(spread:pad, x1:0, y1:0.147, x2:0.006, y2:0.618636, stop:0.0397727 rgba(109, 109, 109, 255), stop:1 rgba(39, 39, 39, 255));\n"
"  border: none;\n"
"  border-radius: 10px;\n"
"}")
        self.pushButton_8.setObjectName("pushButton_8")
        self.pushButton_8.clicked.connect(self.open_dorks_page)
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_2.setGeometry(QtCore.QRect(210, 160, 941, 471))
        self.textBrowser_2.setStyleSheet("background-color:rgb(222, 222, 222)")
        self.textBrowser_2.setObjectName("textBrowser_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1361, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Admin page finder"))
        self.pushButton_2.setText(_translate("MainWindow", "Clickjacking"))
        self.pushButton_3.setText(_translate("MainWindow", "Port scanner"))
        self.pushButton_4.setText(_translate("MainWindow", "Info gathering"))
        self.pushButton_5.setText(_translate("MainWindow", "XSS"))
        self.pushButton_6.setText(_translate("MainWindow", "CSRF"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:28pt; font-weight:600;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:28pt; font-weight:600;\">  Web Vulnerability Scanner</span></p></body></html>"))
        self.pushButton_7.setText(_translate("MainWindow", "Banner grabbing"))
        self.pushButton_8.setText(_translate("MainWindow", "Dorks"))
        self.textBrowser_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt;\">             Web Vulnerability Scanners are automated tools that scan web applications, normally from the outside, to look for security vulnerabilities .It detects  types of vulnerabilties in your website. Web vulnerability scanner is simple,but portable and really adaptable.However, because both administrators and attackers can use the same tool for fixing or exploiting a system, administrators need to conduct a scan and fix problems before an attacker can do the same scan and exploit any vulnerabilities found. This scanner allows early detection and handling of known security problems. By employing ongoing security assessments using vulnerability scanners, it is easy to identify security vulnerabilities that may be present in the network, from both the internal and external perspective. </span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:14pt;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt;\">Overall, our findings confirm that web application vulnerabilities are increasingly posing serious threats to organizations’ overall security posture, such as data loss or alteration, system down-time, loss of reputation and severe fines from the regulator, amongst others. Website security should be a priority in any organization, but remains the most overlooked aspect of securing the enterprise. Hackers continue to concentrate their efforts on web-based applications since they often have direct access to back-end data such as customer databases.</span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:14pt;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt;\">Use of a tools that complies with this specification does not guarantee the code will be free of weaknesses.This software is designed to san small websites such as a personals,forums,etc ; absolutely not big application: it would take too long time and flood your network.</span></p></body></html>"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        
    def open_admin_page(self):
        self.window=QtWidgets.QMainWindow()
        self.ui=adminpage_MainWindow()
        self.ui.setupUi(self.window)
        self.window.show()
        
    def open_clickjacking_page(self):
        self.window=QtWidgets.QMainWindow()
        self.ui=clickjacking_MainWindow()
        self.ui.setupUi(self.window)
        self.window.show()
        
    def open_portscanner_page(self):
        self.window=QtWidgets.QMainWindow()
        self.ui=portscanner_MainWindow()
        self.ui.setupUi(self.window)
        self.window.show()
        
    def open_infogath_page(self):
        self.window=QtWidgets.QMainWindow()
        self.ui=infogath_MainWindow()
        self.ui.setupUi(self.window)
        self.window.show()
        
    def open_xss_page(self):
        self.window=QtWidgets.QMainWindow()
        self.ui=xss_MainWindow()
        self.ui.setupUi(self.window)
        self.window.show()
      
    def open_csrf_page(self):
        self.window=QtWidgets.QMainWindow()
        self.ui=csrf_MainWindow()
        self.ui.setupUi(self.window)
        self.window.show()
        
    def open_bannergrabbing_page(self):
        self.window=QtWidgets.QMainWindow()
        self.ui=bannergrabbing_MainWindow()
        self.ui.setupUi(self.window)
        self.window.show()
        
    def open_dorks_page(self):
        self.window=QtWidgets.QMainWindow()
        self.ui=dorks_MainWindow()
        self.ui.setupUi(self.window)
        self.window.show()

import temp

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

